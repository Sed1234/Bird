#include "Player.h"



Player::Player(sf::String F, float X, float Y, float W, float H)
{
	dx = 0; dy = 0; speed = 0; dir = 0;
	File = F;//имя файла+расширение
	w = W; h = H;//высота и ширина
	image.loadFromFile("images/" + File);//запихиваем в image наше изображение вместо File мы передадим то, что пропишем при создании объекта. В нашем случае "hero.png" и получится запись идентичная 	image.loadFromFile("images/hero/png");
	image.createMaskFromColor(sf::Color(255, 255, 255));
	texture.loadFromImage(image);//закидываем наше изображение в текстуру
	sprite.setTexture(texture);//заливаем спрайт текстурой
	x = X; y = Y;//координата появления спрайта
	sprite.setTextureRect(sf::IntRect(0, 0, w, h));
}

void Player::update(float time , sf::RenderWindow & window)
{

	switch (dir)//реализуем поведение в зависимости от направления. (каждая цифра соответствует направлению)
	{
	case 1: dy = -0.1; dx = speed;
		break;
	case 2: dy = 0.1; dx = speed;
		break;
	}

	x += dx*time;//то движение из прошлого урока. наше ускорение на время получаем смещение координат и как следствие движение
	y += dy;//аналогично по игреку
	speed = 0;//зануляем скорость, чтобы персонаж остановился.
	sprite.setPosition(x, y); //выводим спрайт в позицию x y , посередине. бесконечно выводим в этой функции, иначе бы наш спрайт стоял на месте.
	interactionWithMap( window);
}
void Player::interactionWithMap(sf::RenderWindow & window)
{

	for (int i = y / 32; i < (y + h) / 32; i++)//проходимся по тайликам, контактирующим с игроком,, то есть по всем квадратикам размера 32*32, которые мы окрашивали в 9 уроке. про условия читайте ниже.
	{
		for (int j = x / 32; j < (x + w) / 32; j++)//икс делим на 32, тем самым получаем левый квадратик, с которым персонаж соприкасается. (он ведь больше размера 32*32, поэтому может одновременно стоять на нескольких квадратах). А j<(x + w) / 32 - условие ограничения координат по иксу. то есть координата самого правого квадрата, который соприкасается с персонажем. таким образом идем в цикле слева направо по иксу, проходя по от левого квадрата (соприкасающегося с героем), до правого квадрата (соприкасающегося с героем)
		{
			if (TileMap[i][j] == '0')//если наш квадратик соответствует символу 0 (стена), то проверяем "направление скорости" персонажа:
			{
				if (dy < 0)
				{
					y = j * 2;//аналогично с ходьбой вверх. dy<0, значит мы идем вверх (вспоминаем координаты паинта)
				}
			}
			if (TileMap[i][j] == '1')
			{
				//system("pause");
				window.close();
			}
		}
	}
}
float Player::getplayercoordinateX() {
	return x;
}
float Player::getplayercoordinateY() {
	return y;
}

Player::~Player()
{
}